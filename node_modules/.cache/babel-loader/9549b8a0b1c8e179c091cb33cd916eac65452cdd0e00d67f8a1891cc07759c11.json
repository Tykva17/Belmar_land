{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/Belmar_land/src/LanguageContext/LanguageContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport uaJsonAff from '../text-data/uaAff.json';\nimport enJsonAff from '../text-data/enAff.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageContext = /*#__PURE__*/createContext();\nexport const LanguageProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [toggleLang, setToggleLang] = useState(false);\n  const [affAdv, setAffAdv] = useState(false);\n  const [translations, setTranslations] = useState(uaJsonAff);\n  const changeLanguage = newLanguage => {\n    setToggleLang(!toggleLang);\n    toggleLang ? setTranslations(uaJsonAff) : setTranslations(enJsonAff);\n  };\n  return /*#__PURE__*/_jsxDEV(LanguageContext.Provider, {\n    value: {\n      translations,\n      changeLanguage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(LanguageProvider, \"jMC6ibH/uU/DnR1tmmVZGdBY8NY=\");\n_c = LanguageProvider;\nexport default LanguageContext;\nvar _c;\n$RefreshReg$(_c, \"LanguageProvider\");","map":{"version":3,"names":["React","createContext","useState","uaJsonAff","enJsonAff","jsxDEV","_jsxDEV","LanguageContext","LanguageProvider","_ref","_s","children","toggleLang","setToggleLang","affAdv","setAffAdv","translations","setTranslations","changeLanguage","newLanguage","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Applications/MAMP/htdocs/Belmar_land/src/LanguageContext/LanguageContext.jsx"],"sourcesContent":["import React, { createContext, useState } from 'react';\nimport uaJsonAff from '../text-data/uaAff.json';\nimport enJsonAff from '../text-data/enAff.json';\nconst LanguageContext = createContext();\n\nexport const LanguageProvider = ({ children }) => {\n    const [toggleLang, setToggleLang] = useState(false);\n    const [affAdv, setAffAdv] = useState(false);\n    const [translations, setTranslations] = useState(uaJsonAff);\n\n    const changeLanguage = (newLanguage) => {\n        setToggleLang(!toggleLang);\n        toggleLang ? setTranslations(uaJsonAff) : setTranslations(enJsonAff);\n    };\n\n    return (\n        <LanguageContext.Provider value={{ translations, changeLanguage }}>\n            {children}\n        </LanguageContext.Provider>\n    );\n};\nexport default LanguageContext;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AACtD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAChD,MAAMC,eAAe,gBAAGN,aAAa,CAAC,CAAC;AAEvC,OAAO,MAAMO,gBAAgB,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACzC,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAACC,SAAS,CAAC;EAE3D,MAAMe,cAAc,GAAIC,WAAW,IAAK;IACpCN,aAAa,CAAC,CAACD,UAAU,CAAC;IAC1BA,UAAU,GAAGK,eAAe,CAACd,SAAS,CAAC,GAAGc,eAAe,CAACb,SAAS,CAAC;EACxE,CAAC;EAED,oBACIE,OAAA,CAACC,eAAe,CAACa,QAAQ;IAACC,KAAK,EAAE;MAAEL,YAAY;MAAEE;IAAe,CAAE;IAAAP,QAAA,EAC7DA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAEnC,CAAC;AAACf,EAAA,CAfWF,gBAAgB;AAAAkB,EAAA,GAAhBlB,gBAAgB;AAgB7B,eAAeD,eAAe;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}