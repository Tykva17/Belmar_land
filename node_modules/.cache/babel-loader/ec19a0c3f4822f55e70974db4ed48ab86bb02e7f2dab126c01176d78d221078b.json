{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/Belmar_land/src/LanguageContext/LanguageContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { logDOM } from \"@testing-library/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageContext = /*#__PURE__*/createContext();\nexport const LanguageProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [language, setLanguage] = useState('en');\n  const [translations, setTranslations] = useState({});\n  useEffect(() => {\n    // Завантажте переклади з JSON-файлу або використовуйте API-запит для отримання перекладів\n    const loadTranslations = async () => {\n      const response = await fetch(`../text-data/ua.json`);\n      const data = await response.json();\n      setTranslations(data);\n    };\n    loadTranslations().then(r => console.log(r));\n  }, [language]);\n  const changeLanguage = newLanguage => {\n    setLanguage(newLanguage);\n  };\n  return /*#__PURE__*/_jsxDEV(LanguageContext.Provider, {\n    value: {\n      language,\n      translations,\n      changeLanguage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(LanguageProvider, \"jKdAzjxqueU6zu6VdveHwG3HHfs=\");\n_c = LanguageProvider;\nexport default LanguageContext;\nvar _c;\n$RefreshReg$(_c, \"LanguageProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","logDOM","jsxDEV","_jsxDEV","LanguageContext","LanguageProvider","_ref","_s","children","language","setLanguage","translations","setTranslations","loadTranslations","response","fetch","data","json","then","r","console","log","changeLanguage","newLanguage","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Applications/MAMP/htdocs/Belmar_land/src/LanguageContext/LanguageContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport {logDOM} from \"@testing-library/react\";\n\nconst LanguageContext = createContext();\n\nexport const LanguageProvider = ({ children }) => {\n    const [language, setLanguage] = useState('en');\n    const [translations, setTranslations] = useState({});\n\n    useEffect(() => {\n        // Завантажте переклади з JSON-файлу або використовуйте API-запит для отримання перекладів\n        const loadTranslations = async () => {\n            const response = await fetch(`../text-data/ua.json`);\n            const data = await response.json();\n            setTranslations(data);\n        };\n\n        loadTranslations().then(r => console.log(r));\n    }, [language]);\n\n    const changeLanguage = (newLanguage) => {\n        setLanguage(newLanguage);\n    };\n\n    return (\n        <LanguageContext.Provider value={{ language, translations, changeLanguage }}>\n            {children}\n        </LanguageContext.Provider>\n    );\n};\n\nexport default LanguageContext;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAAQC,MAAM,QAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,eAAe,gBAAGN,aAAa,CAAC,CAAC;AAEvC,OAAO,MAAMO,gBAAgB,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACzC,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMa,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACjC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,sBAAqB,CAAC;MACpD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCL,eAAe,CAACI,IAAI,CAAC;IACzB,CAAC;IAEDH,gBAAgB,CAAC,CAAC,CAACK,IAAI,CAACC,CAAC,IAAIC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC,CAAC;EAChD,CAAC,EAAE,CAACV,QAAQ,CAAC,CAAC;EAEd,MAAMa,cAAc,GAAIC,WAAW,IAAK;IACpCb,WAAW,CAACa,WAAW,CAAC;EAC5B,CAAC;EAED,oBACIpB,OAAA,CAACC,eAAe,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEhB,QAAQ;MAAEE,YAAY;MAAEW;IAAe,CAAE;IAAAd,QAAA,EACvEA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAEnC,CAAC;AAACtB,EAAA,CAxBWF,gBAAgB;AAAAyB,EAAA,GAAhBzB,gBAAgB;AA0B7B,eAAeD,eAAe;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}