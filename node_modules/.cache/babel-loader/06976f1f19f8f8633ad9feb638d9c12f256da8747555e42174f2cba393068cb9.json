{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/Belmar_land/src/LanguageContext/LanguageContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from 'react';\nimport uaJsonAff from '../text-data/uaAff.json';\nimport enJsonAff from '../text-data/enAff.json';\nimport uaJsonAdv from '../text-data/uaAdv.json';\nimport enJsonAdv from '../text-data/enAdv.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageContext = /*#__PURE__*/createContext();\nexport const LanguageProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [toggleLang, setToggleLang] = useState(null); // ua ==> true , en ==> false\n  const [affAdv, setAffAdv] = useState(null); // en ==> true , ua ==> false\n  const [translations, setTranslations] = useState(uaJsonAff);\n  const showText = (lang, affadv) => {\n    if (lang == 'ua' && affadv == 'aff') {\n      setTranslations(uaJsonAff);\n    } else if (lang == 'ua' && affadv == 'adv') {\n      setTranslations(uaJsonAdv);\n    } else if (lang == 'en' && affadv == 'aff') {\n      setTranslations(enJsonAff);\n    } else if (lang == 'en' && affadv == 'adv') {\n      setTranslations(enJsonAdv);\n    }\n  };\n  const changeLanguage = newLanguage => {\n    setToggleLang(newLanguage);\n    showText(newLanguage, affAdv);\n  };\n  const changeAffAdv = affOrAdv => {\n    setAffAdv(affOrAdv);\n    showText(toggleLang, affOrAdv);\n  };\n  useEffect(() => {\n    const langNow = localStorage.getItem(\"langNow\");\n    if (langNow !== undefined || langNow !== null) {\n      localStorage.setItem(\"langNow\", \"ua\");\n      setToggleLang('ua');\n      console.log(langNow, 'langNow if 1');\n    } else {\n      setToggleLang(langNow);\n      console.log(langNow, 'langNow if 2');\n    }\n    console.log(langNow, 'langNow if after');\n    const affOrAdvNow = localStorage.getItem(\"affOrAdvNow\");\n    if (affOrAdvNow !== undefined || affOrAdvNow !== null) {\n      localStorage.setItem(\"affOrAdvNow\", \"aff\");\n      setAffAdv('aff');\n    } else {\n      setAffAdv(affOrAdvNow);\n    }\n    console.log(\"toggleLang : \", toggleLang);\n    console.log(\"affAdv : \", affAdv);\n  }, [setToggleLang, setAffAdv]);\n  return /*#__PURE__*/_jsxDEV(LanguageContext.Provider, {\n    value: {\n      translations,\n      changeLanguage,\n      changeAffAdv\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(LanguageProvider, \"wzeVnP1IkBC8NXq/Sq+vMOLZCCc=\");\n_c = LanguageProvider;\nexport default LanguageContext;\nvar _c;\n$RefreshReg$(_c, \"LanguageProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","uaJsonAff","enJsonAff","uaJsonAdv","enJsonAdv","jsxDEV","_jsxDEV","LanguageContext","LanguageProvider","_ref","_s","children","toggleLang","setToggleLang","affAdv","setAffAdv","translations","setTranslations","showText","lang","affadv","changeLanguage","newLanguage","changeAffAdv","affOrAdv","langNow","localStorage","getItem","undefined","setItem","console","log","affOrAdvNow","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Applications/MAMP/htdocs/Belmar_land/src/LanguageContext/LanguageContext.jsx"],"sourcesContent":["import React, {createContext, useEffect, useState} from 'react';\nimport uaJsonAff from '../text-data/uaAff.json';\nimport enJsonAff from '../text-data/enAff.json';\nimport uaJsonAdv from '../text-data/uaAdv.json';\nimport enJsonAdv from '../text-data/enAdv.json';\nconst LanguageContext = createContext();\n\nexport const LanguageProvider = ({ children }) => {\n    const [toggleLang, setToggleLang] = useState(null); // ua ==> true , en ==> false\n    const [affAdv, setAffAdv] = useState(null); // en ==> true , ua ==> false\n    const [translations, setTranslations] = useState(uaJsonAff);\n\n    const showText = (lang, affadv) => {\n        if(lang == 'ua' && affadv == 'aff'){\n            setTranslations(uaJsonAff);\n        }else if(lang == 'ua' && affadv == 'adv'){\n            setTranslations(uaJsonAdv);\n        }else if(lang == 'en' && affadv == 'aff'){\n            setTranslations(enJsonAff);\n        }else if(lang == 'en' && affadv == 'adv'){\n            setTranslations(enJsonAdv);\n        }\n    }\n\n    const changeLanguage = (newLanguage) => {\n        setToggleLang(newLanguage);\n        showText(newLanguage,affAdv);\n    };\n    const changeAffAdv = (affOrAdv) => {\n        setAffAdv(affOrAdv);\n        showText(toggleLang,affOrAdv);\n    }\n\n    useEffect(() => {\n        const langNow = localStorage.getItem(\"langNow\");\n        if(langNow !== undefined || langNow !== null){\n            localStorage.setItem(\"langNow\", \"ua\");\n            setToggleLang('ua');\n            console.log(langNow , 'langNow if 1');\n        }else{\n            setToggleLang(langNow);\n            console.log(langNow , 'langNow if 2');\n\n        }\n        console.log(langNow , 'langNow if after');\n\n\n        const affOrAdvNow = localStorage.getItem(\"affOrAdvNow\");\n        if(affOrAdvNow !== undefined || affOrAdvNow !== null){\n            localStorage.setItem(\"affOrAdvNow\", \"aff\");\n            setAffAdv('aff');\n        }else{\n            setAffAdv(affOrAdvNow);\n        }\n\n        console.log(\"toggleLang : \" , toggleLang);\n        console.log(\"affAdv : \" , affAdv);\n    },[setToggleLang, setAffAdv]);\n\n\n\n\n    return (\n        <LanguageContext.Provider value={{ translations, changeLanguage, changeAffAdv }}>\n            {children}\n        </LanguageContext.Provider>\n    );\n};\nexport default LanguageContext;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}