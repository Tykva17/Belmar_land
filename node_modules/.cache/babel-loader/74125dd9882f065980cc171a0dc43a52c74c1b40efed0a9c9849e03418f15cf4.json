{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/Belmar_land/src/components/ContactForm/ContactForm.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport './contactForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object().shape({\n  name: Yup.string().required('Поле є обовязковим'),\n  email: Yup.string().email('Неправильний формат електронної пошти').required('Поле \"Електронна пошта\" є обовязковим'),\n  comment: Yup.string().required('Поле \"Коментар\" є обовязковим')\n});\nconst FloatingLabelInput = _ref => {\n  _s();\n  let {\n    label,\n    type,\n    value,\n    onChange,\n    id,\n    inputClass\n  } = _ref;\n  const [focused, setFocused] = useState(false);\n  const [inputClassName, setInputClassName] = useState('');\n  const handleChangeClass = () => {\n    setInputClassName(inputClass);\n  };\n  const handleFocus = () => {\n    setFocused(true);\n  };\n  const handleBlur = () => {\n    setFocused(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form_box\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: `form_label ${focused || value ? 'active' : ''}`,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: inputClassName,\n      id: id,\n      type: type,\n      value: value,\n      onChange: onChange,\n      onFocus: handleFocus,\n      onBlur: handleBlur\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(FloatingLabelInput, \"Far5kBj1RwDQJ1xgLcnXa8EKLAI=\");\n_c = FloatingLabelInput;\nconst ContactForm = () => {\n  _s2();\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      comment: ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  const handleClassChange = event => {};\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form_submit\",\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(FloatingLabelInput, {\n      inputClass: formik.touched.name && formik.errors.name ? handleClassChange('error form_input') : handleClassChange('form_input'),\n      id: 'name',\n      label: 'name',\n      type: 'name',\n      value: formik.values.name,\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FloatingLabelInput, {\n      inputClass: formik.touched.name && formik.errors.name ? 'error form_input' : 'form_input',\n      id: 'email',\n      label: 'E-mail',\n      type: 'email',\n      value: formik.values.email,\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FloatingLabelInput, {\n      inputClass: formik.touched.name && formik.errors.name ? 'error form_input' : 'form_input',\n      id: 'comment',\n      label: 'comment',\n      type: 'text',\n      value: formik.values.comment,\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"form_submit_btn\",\n      type: \"submit\",\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s2(ContactForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c2 = ContactForm;\nexport default ContactForm;\nvar _c, _c2;\n$RefreshReg$(_c, \"FloatingLabelInput\");\n$RefreshReg$(_c2, \"ContactForm\");","map":{"version":3,"names":["React","useState","useFormik","Yup","jsxDEV","_jsxDEV","validationSchema","object","shape","name","string","required","email","comment","FloatingLabelInput","_ref","_s","label","type","value","onChange","id","inputClass","focused","setFocused","inputClassName","setInputClassName","handleChangeClass","handleFocus","handleBlur","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onFocus","onBlur","_c","ContactForm","_s2","formik","initialValues","onSubmit","values","alert","JSON","stringify","handleClassChange","event","handleSubmit","touched","errors","handleChange","_c2","$RefreshReg$"],"sources":["/Applications/MAMP/htdocs/Belmar_land/src/components/ContactForm/ContactForm.jsx"],"sourcesContent":["import React, {useState} from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport './contactForm.css';\n\nconst validationSchema = Yup.object().shape({\n    name: Yup.string().required('Поле є обовязковим'),\n    email: Yup.string().email('Неправильний формат електронної пошти').required('Поле \"Електронна пошта\" є обовязковим'),\n    comment: Yup.string().required('Поле \"Коментар\" є обовязковим'),\n});\n\nconst FloatingLabelInput = ({ label, type, value, onChange, id, inputClass }) => {\n    const [focused, setFocused] = useState(false);\n    const [inputClassName, setInputClassName] = useState('');\n\n    const handleChangeClass = () => {\n        setInputClassName(inputClass)\n    }\n    const handleFocus = () => {\n        setFocused(true);\n    };\n\n    const handleBlur = () => {\n        setFocused(false);\n    };\n\n    return (\n        <div className='form_box'>\n            <label\n                className={`form_label ${focused || value ? 'active' : ''}`}\n            >{label}</label>\n            <input\n                className={inputClassName}\n                id={id}\n                type={type}\n                value={value}\n                onChange={onChange}\n                onFocus={handleFocus}\n                onBlur={handleBlur}\n            />\n        </div>\n    );\n};\n\n\nconst ContactForm = () => {\n    const formik = useFormik({\n        initialValues: {\n            name: '',\n            email: '',\n            comment: '',\n        },\n\n        validationSchema: validationSchema,\n        onSubmit: values => {\n            alert(JSON.stringify(values, null, 2));\n        },\n    });\n\n\n    const handleClassChange = event => {\n\n    };\n\n\n\n\n    return (\n        <form className='form_submit' onSubmit={formik.handleSubmit}>\n            <FloatingLabelInput\n                inputClass={formik.touched.name && formik.errors.name ? handleClassChange('error form_input') : handleClassChange('form_input')}\n                id={'name'}\n                label={'name'}\n                type={'name'}\n                value={formik.values.name}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n            />\n\n            <FloatingLabelInput\n                inputClass={formik.touched.name && formik.errors.name ? 'error form_input' : 'form_input'}\n                id={'email'}\n                label={'E-mail'}\n                type={'email'}\n                value={formik.values.email}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n            />\n\n            <FloatingLabelInput\n                inputClass={formik.touched.name && formik.errors.name ? 'error form_input' : 'form_input'}\n                id={'comment'}\n                label={'comment'}\n                type={'text'}\n                value={formik.values.comment}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n            />\n\n            <button className='form_submit_btn' type=\"submit\">Send</button>\n        </form>\n    );\n};\n\nexport default ContactForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}