{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/Belmar_land/src/LanguageContext/LanguageContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from 'react';\nimport uaJsonAff from '../text-data/uaAff.json';\nimport enJsonAff from '../text-data/enAff.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageContext = /*#__PURE__*/createContext();\nexport const LanguageProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [toggleLang, setToggleLang] = useState(false); // ua ==> true , en ==> false\n  const [affAdv, setAffAdv] = useState(false); // en ==> true , ua ==> false\n  const [translations, setTranslations] = useState(uaJsonAff);\n  useEffect(() => {\n    console.log(\"toggleLang : \", toggleLang);\n    console.log(\"affAdv : \", affAdv);\n  }, []);\n  const changeLanguage = newLanguage => {\n    // console.log('newLanguage : ',newLanguage);\n    setToggleLang(!toggleLang);\n    toggleLang ? setTranslations(uaJsonAff) : setTranslations(enJsonAff);\n  };\n  const changeAffAdv = affOrAdv => {\n    // console.log('affOrAdv : ',affOrAdv);\n    setAffAdv(!affAdv);\n  };\n  return /*#__PURE__*/_jsxDEV(LanguageContext.Provider, {\n    value: {\n      translations,\n      changeLanguage,\n      changeAffAdv\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(LanguageProvider, \"ye4mZ2KAI4ZHB5mhWiq9QsiUyPU=\");\n_c = LanguageProvider;\nexport default LanguageContext;\nvar _c;\n$RefreshReg$(_c, \"LanguageProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","uaJsonAff","enJsonAff","jsxDEV","_jsxDEV","LanguageContext","LanguageProvider","_ref","_s","children","toggleLang","setToggleLang","affAdv","setAffAdv","translations","setTranslations","console","log","changeLanguage","newLanguage","changeAffAdv","affOrAdv","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Applications/MAMP/htdocs/Belmar_land/src/LanguageContext/LanguageContext.jsx"],"sourcesContent":["import React, {createContext, useEffect, useState} from 'react';\nimport uaJsonAff from '../text-data/uaAff.json';\nimport enJsonAff from '../text-data/enAff.json';\nconst LanguageContext = createContext();\n\nexport const LanguageProvider = ({ children }) => {\n    const [toggleLang, setToggleLang] = useState(false); // ua ==> true , en ==> false\n    const [affAdv, setAffAdv] = useState(false); // en ==> true , ua ==> false\n    const [translations, setTranslations] = useState(uaJsonAff);\n\n    useEffect(() => {\n        console.log(\"toggleLang : \" , toggleLang);\n        console.log(\"affAdv : \" , affAdv);\n    },[]);\n\n    const changeLanguage = (newLanguage) => {\n        // console.log('newLanguage : ',newLanguage);\n        setToggleLang(!toggleLang);\n        toggleLang ? setTranslations(uaJsonAff) : setTranslations(enJsonAff);\n    };\n    const changeAffAdv = (affOrAdv) => {\n        // console.log('affOrAdv : ',affOrAdv);\n        setAffAdv(!affAdv);\n    }\n\n    return (\n        <LanguageContext.Provider value={{ translations, changeLanguage, changeAffAdv }}>\n            {children}\n        </LanguageContext.Provider>\n    );\n};\nexport default LanguageContext;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAC/D,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAChD,MAAMC,eAAe,gBAAGP,aAAa,CAAC,CAAC;AAEvC,OAAO,MAAMQ,gBAAgB,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACzC,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACrD,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAACC,SAAS,CAAC;EAE3DF,SAAS,CAAC,MAAM;IACZiB,OAAO,CAACC,GAAG,CAAC,eAAe,EAAGP,UAAU,CAAC;IACzCM,OAAO,CAACC,GAAG,CAAC,WAAW,EAAGL,MAAM,CAAC;EACrC,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMM,cAAc,GAAIC,WAAW,IAAK;IACpC;IACAR,aAAa,CAAC,CAACD,UAAU,CAAC;IAC1BA,UAAU,GAAGK,eAAe,CAACd,SAAS,CAAC,GAAGc,eAAe,CAACb,SAAS,CAAC;EACxE,CAAC;EACD,MAAMkB,YAAY,GAAIC,QAAQ,IAAK;IAC/B;IACAR,SAAS,CAAC,CAACD,MAAM,CAAC;EACtB,CAAC;EAED,oBACIR,OAAA,CAACC,eAAe,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAET,YAAY;MAAEI,cAAc;MAAEE;IAAa,CAAE;IAAAX,QAAA,EAC3EA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAEnC,CAAC;AAACnB,EAAA,CAzBWF,gBAAgB;AAAAsB,EAAA,GAAhBtB,gBAAgB;AA0B7B,eAAeD,eAAe;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}