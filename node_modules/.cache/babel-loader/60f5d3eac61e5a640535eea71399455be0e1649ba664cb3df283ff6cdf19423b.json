{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/Belmar_land/src/LanguageContext/LanguageContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageContext = /*#__PURE__*/createContext();\nexport const LanguageProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [language, setLanguage] = useState('en');\n  const [translations, setTranslations] = useState({});\n  useEffect(() => {\n    let json = [{\n      'navBarItems': 'hello'\n    }];\n    let jsonUrl = '../../text-data/ua.json';\n\n    // function sendRequest(url){\n    //     return fetch(url).then(response => {\n    //         return response.json()\n    //     })\n    // }\n    // Завантажте переклади з JSON-файлу або використовуйте API-запит для отримання перекладів\n    // const loadTranslations = async () => {\n    //     console.log('response before')\n    //     const response = await fetch(`${json}`);\n    //     console.log('response : ' , response)\n    //     const data = await response.json();\n    //     console.log('data : ' , data)\n    //\n    setTranslations(json.json());\n    // };\n    // sendRequest(jsonUrl)\n    //     .then(\n    //         data => {\n    //             console.log(data);\n    //         }\n    //     )\n    //     .catch( data => {\n    //         console.log(data)\n    //     })\n  }, [language]);\n  const changeLanguage = newLanguage => {\n    setLanguage(newLanguage);\n  };\n  return /*#__PURE__*/_jsxDEV(LanguageContext.Provider, {\n    value: {\n      language,\n      translations,\n      changeLanguage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(LanguageProvider, \"jKdAzjxqueU6zu6VdveHwG3HHfs=\");\n_c = LanguageProvider;\nexport default LanguageContext;\nvar _c;\n$RefreshReg$(_c, \"LanguageProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","LanguageContext","LanguageProvider","_ref","_s","children","language","setLanguage","translations","setTranslations","json","jsonUrl","changeLanguage","newLanguage","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Applications/MAMP/htdocs/Belmar_land/src/LanguageContext/LanguageContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nconst LanguageContext = createContext();\n\nexport const LanguageProvider = ({ children }) => {\n    const [language, setLanguage] = useState('en');\n    const [translations, setTranslations] = useState({});\n\n    useEffect(() => {\n\n        let json = [{'navBarItems':'hello'}];\n        let jsonUrl = '../../text-data/ua.json';\n\n        // function sendRequest(url){\n        //     return fetch(url).then(response => {\n        //         return response.json()\n        //     })\n        // }\n        // Завантажте переклади з JSON-файлу або використовуйте API-запит для отримання перекладів\n        // const loadTranslations = async () => {\n        //     console.log('response before')\n        //     const response = await fetch(`${json}`);\n        //     console.log('response : ' , response)\n        //     const data = await response.json();\n        //     console.log('data : ' , data)\n        //\n            setTranslations(json.json());\n        // };\n        // sendRequest(jsonUrl)\n        //     .then(\n        //         data => {\n        //             console.log(data);\n        //         }\n        //     )\n        //     .catch( data => {\n        //         console.log(data)\n        //     })\n    }, [language]);\n\n    const changeLanguage = (newLanguage) => {\n        setLanguage(newLanguage);\n    };\n\n    return (\n        <LanguageContext.Provider value={{ language, translations, changeLanguage }}>\n            {children}\n        </LanguageContext.Provider>\n    );\n};\n\nexport default LanguageContext;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,eAAe,gBAAGL,aAAa,CAAC,CAAC;AAEvC,OAAO,MAAMM,gBAAgB,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACzC,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpDC,SAAS,CAAC,MAAM;IAEZ,IAAIY,IAAI,GAAG,CAAC;MAAC,aAAa,EAAC;IAAO,CAAC,CAAC;IACpC,IAAIC,OAAO,GAAG,yBAAyB;;IAEvC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACIF,eAAe,CAACC,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC;IAChC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACJ,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEd,MAAMM,cAAc,GAAIC,WAAW,IAAK;IACpCN,WAAW,CAACM,WAAW,CAAC;EAC5B,CAAC;EAED,oBACIb,OAAA,CAACC,eAAe,CAACa,QAAQ;IAACC,KAAK,EAAE;MAAET,QAAQ;MAAEE,YAAY;MAAEI;IAAe,CAAE;IAAAP,QAAA,EACvEA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAEnC,CAAC;AAACf,EAAA,CA5CWF,gBAAgB;AAAAkB,EAAA,GAAhBlB,gBAAgB;AA8C7B,eAAeD,eAAe;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}